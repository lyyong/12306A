// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: ticketPool.proto

package ticketPoolRPC

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TrainId        uint32 `protobuf:"varint,2,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`                        // 列车id
	StartStationId uint32 `protobuf:"varint,3,opt,name=start_station_id,json=startStationId,proto3" json:"start_station_id,omitempty"` // 起始站
	StartTime      string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	DestStationId  uint32 `protobuf:"varint,5,opt,name=dest_station_id,json=destStationId,proto3" json:"dest_station_id,omitempty"` // 目的站
	ArriveTime     string `protobuf:"bytes,6,opt,name=arrive_time,json=arriveTime,proto3" json:"arrive_time,omitempty"`
	Date           string `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`                                           // 乘车日期
	SeatTypeId     uint32 `protobuf:"varint,8,opt,name=seat_type_id,json=seatTypeId,proto3" json:"seat_type_id,omitempty"`          // 座位类型（硬座、卧铺、一等、二等）
	CarriageNumber string `protobuf:"bytes,9,opt,name=carriage_number,json=carriageNumber,proto3" json:"carriage_number,omitempty"` // 车厢号
	SeatNumber     string `protobuf:"bytes,10,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`            // 座号
	PassengerId    uint32 `protobuf:"varint,11,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`        // 乘车人id
	IndentId       uint32 `protobuf:"varint,12,opt,name=indent_id,json=indentId,proto3" json:"indent_id,omitempty"`                 // 订单号
	Amount         int32  `protobuf:"varint,13,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ticket) GetTrainId() uint32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *Ticket) GetStartStationId() uint32 {
	if x != nil {
		return x.StartStationId
	}
	return 0
}

func (x *Ticket) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Ticket) GetDestStationId() uint32 {
	if x != nil {
		return x.DestStationId
	}
	return 0
}

func (x *Ticket) GetArriveTime() string {
	if x != nil {
		return x.ArriveTime
	}
	return ""
}

func (x *Ticket) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Ticket) GetSeatTypeId() uint32 {
	if x != nil {
		return x.SeatTypeId
	}
	return 0
}

func (x *Ticket) GetCarriageNumber() string {
	if x != nil {
		return x.CarriageNumber
	}
	return ""
}

func (x *Ticket) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *Ticket) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

func (x *Ticket) GetIndentId() uint32 {
	if x != nil {
		return x.IndentId
	}
	return 0
}

func (x *Ticket) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 出票
type GetTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId        uint32           `protobuf:"varint,1,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	StartStationId uint32           `protobuf:"varint,2,opt,name=start_station_id,json=startStationId,proto3" json:"start_station_id,omitempty"`
	DestStationId  uint32           `protobuf:"varint,3,opt,name=dest_station_id,json=destStationId,proto3" json:"dest_station_id,omitempty"`
	Date           string           `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Passengers     []*PassengerInfo `protobuf:"bytes,5,rep,name=passengers,proto3" json:"passengers,omitempty"`
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{1}
}

func (x *GetTicketRequest) GetTrainId() uint32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *GetTicketRequest) GetStartStationId() uint32 {
	if x != nil {
		return x.StartStationId
	}
	return 0
}

func (x *GetTicketRequest) GetDestStationId() uint32 {
	if x != nil {
		return x.DestStationId
	}
	return 0
}

func (x *GetTicketRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetTicketRequest) GetPassengers() []*PassengerInfo {
	if x != nil {
		return x.Passengers
	}
	return nil
}

type PassengerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassengerId uint32 `protobuf:"varint,1,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	SeatTypeId  uint32 `protobuf:"varint,2,opt,name=seat_type_id,json=seatTypeId,proto3" json:"seat_type_id,omitempty"`
	ChooseSeat  string `protobuf:"bytes,3,opt,name=choose_seat,json=chooseSeat,proto3" json:"choose_seat,omitempty"`
}

func (x *PassengerInfo) Reset() {
	*x = PassengerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassengerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassengerInfo) ProtoMessage() {}

func (x *PassengerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassengerInfo.ProtoReflect.Descriptor instead.
func (*PassengerInfo) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{2}
}

func (x *PassengerInfo) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

func (x *PassengerInfo) GetSeatTypeId() uint32 {
	if x != nil {
		return x.SeatTypeId
	}
	return 0
}

func (x *PassengerInfo) GetChooseSeat() string {
	if x != nil {
		return x.ChooseSeat
	}
	return ""
}

type GetTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *GetTicketResponse) Reset() {
	*x = GetTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketResponse) ProtoMessage() {}

func (x *GetTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketResponse.ProtoReflect.Descriptor instead.
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{3}
}

func (x *GetTicketResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

// 查余票
type GetTicketNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId        []uint32 `protobuf:"varint,1,rep,packed,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	StartStationId uint32   `protobuf:"varint,2,opt,name=start_station_id,json=startStationId,proto3" json:"start_station_id,omitempty"`
	DestStationId  uint32   `protobuf:"varint,3,opt,name=dest_station_id,json=destStationId,proto3" json:"dest_station_id,omitempty"`
	Date           string   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetTicketNumberRequest) Reset() {
	*x = GetTicketNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketNumberRequest) ProtoMessage() {}

func (x *GetTicketNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketNumberRequest.ProtoReflect.Descriptor instead.
func (*GetTicketNumberRequest) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{4}
}

func (x *GetTicketNumberRequest) GetTrainId() []uint32 {
	if x != nil {
		return x.TrainId
	}
	return nil
}

func (x *GetTicketNumberRequest) GetStartStationId() uint32 {
	if x != nil {
		return x.StartStationId
	}
	return 0
}

func (x *GetTicketNumberRequest) GetDestStationId() uint32 {
	if x != nil {
		return x.DestStationId
	}
	return 0
}

func (x *GetTicketNumberRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type TrainTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId  uint32      `protobuf:"varint,1,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	SeatInfo []*SeatInfo `protobuf:"bytes,2,rep,name=seat_info,json=seatInfo,proto3" json:"seat_info,omitempty"`
}

func (x *TrainTicketInfo) Reset() {
	*x = TrainTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainTicketInfo) ProtoMessage() {}

func (x *TrainTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainTicketInfo.ProtoReflect.Descriptor instead.
func (*TrainTicketInfo) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{5}
}

func (x *TrainTicketInfo) GetTrainId() uint32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *TrainTicketInfo) GetSeatInfo() []*SeatInfo {
	if x != nil {
		return x.SeatInfo
	}
	return nil
}

type SeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatTypeId uint32 `protobuf:"varint,1,opt,name=seat_type_id,json=seatTypeId,proto3" json:"seat_type_id,omitempty"`
	SeatNumber int32  `protobuf:"varint,2,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
}

func (x *SeatInfo) Reset() {
	*x = SeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatInfo) ProtoMessage() {}

func (x *SeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatInfo.ProtoReflect.Descriptor instead.
func (*SeatInfo) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{6}
}

func (x *SeatInfo) GetSeatTypeId() uint32 {
	if x != nil {
		return x.SeatTypeId
	}
	return 0
}

func (x *SeatInfo) GetSeatNumber() int32 {
	if x != nil {
		return x.SeatNumber
	}
	return 0
}

type GetTicketNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainsTicketInfo []*TrainTicketInfo `protobuf:"bytes,1,rep,name=trainsTicketInfo,proto3" json:"trainsTicketInfo,omitempty"`
}

func (x *GetTicketNumberResponse) Reset() {
	*x = GetTicketNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketNumberResponse) ProtoMessage() {}

func (x *GetTicketNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketNumberResponse.ProtoReflect.Descriptor instead.
func (*GetTicketNumberResponse) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{7}
}

func (x *GetTicketNumberResponse) GetTrainsTicketInfo() []*TrainTicketInfo {
	if x != nil {
		return x.TrainsTicketInfo
	}
	return nil
}

// 退票
type RefundTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *RefundTicketRequest) Reset() {
	*x = RefundTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTicketRequest) ProtoMessage() {}

func (x *RefundTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTicketRequest.ProtoReflect.Descriptor instead.
func (*RefundTicketRequest) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{8}
}

func (x *RefundTicketRequest) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type RefundTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOk bool `protobuf:"varint,1,opt,name=isOk,proto3" json:"isOk,omitempty"`
}

func (x *RefundTicketResponse) Reset() {
	*x = RefundTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketPool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTicketResponse) ProtoMessage() {}

func (x *RefundTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketPool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTicketResponse.ProtoReflect.Descriptor instead.
func (*RefundTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticketPool_proto_rawDescGZIP(), []int{9}
}

func (x *RefundTicketResponse) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

var File_ticketPool_proto protoreflect.FileDescriptor

var file_ticketPool_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50,
	0x43, 0x22, 0x9d, 0x03, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xd1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64,
	0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x61, 0x74, 0x22, 0x44, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x50, 0x43, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x62,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e,
	0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x08, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x22, 0x2a, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x32, 0xa4, 0x02, 0x0a,
	0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticketPool_proto_rawDescOnce sync.Once
	file_ticketPool_proto_rawDescData = file_ticketPool_proto_rawDesc
)

func file_ticketPool_proto_rawDescGZIP() []byte {
	file_ticketPool_proto_rawDescOnce.Do(func() {
		file_ticketPool_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketPool_proto_rawDescData)
	})
	return file_ticketPool_proto_rawDescData
}

var file_ticketPool_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ticketPool_proto_goTypes = []interface{}{
	(*Ticket)(nil),                  // 0: ticketPoolRPC.Ticket
	(*GetTicketRequest)(nil),        // 1: ticketPoolRPC.GetTicketRequest
	(*PassengerInfo)(nil),           // 2: ticketPoolRPC.PassengerInfo
	(*GetTicketResponse)(nil),       // 3: ticketPoolRPC.GetTicketResponse
	(*GetTicketNumberRequest)(nil),  // 4: ticketPoolRPC.GetTicketNumberRequest
	(*TrainTicketInfo)(nil),         // 5: ticketPoolRPC.TrainTicketInfo
	(*SeatInfo)(nil),                // 6: ticketPoolRPC.SeatInfo
	(*GetTicketNumberResponse)(nil), // 7: ticketPoolRPC.GetTicketNumberResponse
	(*RefundTicketRequest)(nil),     // 8: ticketPoolRPC.RefundTicketRequest
	(*RefundTicketResponse)(nil),    // 9: ticketPoolRPC.RefundTicketResponse
}
var file_ticketPool_proto_depIdxs = []int32{
	2, // 0: ticketPoolRPC.GetTicketRequest.passengers:type_name -> ticketPoolRPC.PassengerInfo
	0, // 1: ticketPoolRPC.GetTicketResponse.tickets:type_name -> ticketPoolRPC.Ticket
	6, // 2: ticketPoolRPC.TrainTicketInfo.seat_info:type_name -> ticketPoolRPC.SeatInfo
	5, // 3: ticketPoolRPC.GetTicketNumberResponse.trainsTicketInfo:type_name -> ticketPoolRPC.TrainTicketInfo
	0, // 4: ticketPoolRPC.RefundTicketRequest.tickets:type_name -> ticketPoolRPC.Ticket
	1, // 5: ticketPoolRPC.TicketPoolService.GetTicket:input_type -> ticketPoolRPC.GetTicketRequest
	4, // 6: ticketPoolRPC.TicketPoolService.GetTicketNumber:input_type -> ticketPoolRPC.GetTicketNumberRequest
	8, // 7: ticketPoolRPC.TicketPoolService.RefundTicket:input_type -> ticketPoolRPC.RefundTicketRequest
	3, // 8: ticketPoolRPC.TicketPoolService.GetTicket:output_type -> ticketPoolRPC.GetTicketResponse
	7, // 9: ticketPoolRPC.TicketPoolService.GetTicketNumber:output_type -> ticketPoolRPC.GetTicketNumberResponse
	9, // 10: ticketPoolRPC.TicketPoolService.RefundTicket:output_type -> ticketPoolRPC.RefundTicketResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_ticketPool_proto_init() }
func file_ticketPool_proto_init() {
	if File_ticketPool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticketPool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassengerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketPool_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketPool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketPool_proto_goTypes,
		DependencyIndexes: file_ticketPool_proto_depIdxs,
		MessageInfos:      file_ticketPool_proto_msgTypes,
	}.Build()
	File_ticketPool_proto = out.File
	file_ticketPool_proto_rawDesc = nil
	file_ticketPool_proto_goTypes = nil
	file_ticketPool_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TicketPoolServiceClient is the client API for TicketPoolService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketPoolServiceClient interface {
	GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error)
	GetTicketNumber(ctx context.Context, in *GetTicketNumberRequest, opts ...grpc.CallOption) (*GetTicketNumberResponse, error)
	RefundTicket(ctx context.Context, in *RefundTicketRequest, opts ...grpc.CallOption) (*RefundTicketResponse, error)
}

type ticketPoolServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketPoolServiceClient(cc grpc.ClientConnInterface) TicketPoolServiceClient {
	return &ticketPoolServiceClient{cc}
}

func (c *ticketPoolServiceClient) GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error) {
	out := new(GetTicketResponse)
	err := c.cc.Invoke(ctx, "/ticketPoolRPC.TicketPoolService/GetTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketPoolServiceClient) GetTicketNumber(ctx context.Context, in *GetTicketNumberRequest, opts ...grpc.CallOption) (*GetTicketNumberResponse, error) {
	out := new(GetTicketNumberResponse)
	err := c.cc.Invoke(ctx, "/ticketPoolRPC.TicketPoolService/GetTicketNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketPoolServiceClient) RefundTicket(ctx context.Context, in *RefundTicketRequest, opts ...grpc.CallOption) (*RefundTicketResponse, error) {
	out := new(RefundTicketResponse)
	err := c.cc.Invoke(ctx, "/ticketPoolRPC.TicketPoolService/RefundTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketPoolServiceServer is the server API for TicketPoolService service.
type TicketPoolServiceServer interface {
	GetTicket(context.Context, *GetTicketRequest) (*GetTicketResponse, error)
	GetTicketNumber(context.Context, *GetTicketNumberRequest) (*GetTicketNumberResponse, error)
	RefundTicket(context.Context, *RefundTicketRequest) (*RefundTicketResponse, error)
}

// UnimplementedTicketPoolServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketPoolServiceServer struct {
}

func (*UnimplementedTicketPoolServiceServer) GetTicket(context.Context, *GetTicketRequest) (*GetTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicket not implemented")
}
func (*UnimplementedTicketPoolServiceServer) GetTicketNumber(context.Context, *GetTicketNumberRequest) (*GetTicketNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicketNumber not implemented")
}
func (*UnimplementedTicketPoolServiceServer) RefundTicket(context.Context, *RefundTicketRequest) (*RefundTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefundTicket not implemented")
}

func RegisterTicketPoolServiceServer(s *grpc.Server, srv TicketPoolServiceServer) {
	s.RegisterService(&_TicketPoolService_serviceDesc, srv)
}

func _TicketPoolService_GetTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketPoolServiceServer).GetTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketPoolRPC.TicketPoolService/GetTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketPoolServiceServer).GetTicket(ctx, req.(*GetTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketPoolService_GetTicketNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketPoolServiceServer).GetTicketNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketPoolRPC.TicketPoolService/GetTicketNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketPoolServiceServer).GetTicketNumber(ctx, req.(*GetTicketNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketPoolService_RefundTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketPoolServiceServer).RefundTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketPoolRPC.TicketPoolService/RefundTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketPoolServiceServer).RefundTicket(ctx, req.(*RefundTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketPoolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ticketPoolRPC.TicketPoolService",
	HandlerType: (*TicketPoolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTicket",
			Handler:    _TicketPoolService_GetTicket_Handler,
		},
		{
			MethodName: "GetTicketNumber",
			Handler:    _TicketPoolService_GetTicketNumber_Handler,
		},
		{
			MethodName: "RefundTicket",
			Handler:    _TicketPoolService_RefundTicket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ticketPool.proto",
}
