syntax="proto3";

package proto;

option go_package=".;orderRPCpb";

message CreateRequest {
  uint64 UserID = 1;
  int64 Money = 2;
  string AffairID = 3;
  int32 ExpireDuration = 4;
  string CreatedBy = 5;
}

message CreateRespond {
  string OrderOutsideID = 1;
}

message OrderInfo {
  uint64 UserID = 1;
  int64 Money = 2;
  string AffairID = 3;
  int32 ExpireDuration = 4;
  string OrderOutsideID = 5;
  int32 State = 6;
}

message SearchCondition {
  uint64 UserID = 1;
}

message ReadRespond {
  repeated OrderInfo infos = 1;
}

message Respond {
  string Content = 1;
}

message CanCreateRespond {
  bool OK = 1;
}

message UpdateStateRequest {
  string OutsideID = 1;
  int32 State = 2;
}

message UpdateStateWithRRequest {
  string OutsideID = 1;
  int32 State = 2;
  string ROutsideID = 3;
}

message RefundRequest {
  uint64 UserID = 1;
  string OutsideID = 2;
  bool FullMoney = 3;
  int64 Money = 4;
}

message ExistNoFinishOrderRespond {
  bool Exist = 1;
}

service OrderRPCService {
  rpc ExistNoFinishOrder(SearchCondition) returns (ExistNoFinishOrderRespond) {};
  rpc Create(CreateRequest) returns (CreateRespond) {};
  rpc Read(SearchCondition) returns (ReadRespond) {};
  rpc UpdateState(UpdateStateRequest) returns (Respond) {};
  rpc UpdateStateWithRelativeOrder(UpdateStateWithRRequest) returns (Respond) {};
  rpc Refund(RefundRequest) returns (Respond) {};
}