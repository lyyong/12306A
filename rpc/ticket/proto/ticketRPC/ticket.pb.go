// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: ticket.proto

package ticketRPC

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrainId           uint32 `protobuf:"varint,3,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	TrainNum          string `protobuf:"bytes,4,opt,name=train_num,json=trainNum,proto3" json:"train_num,omitempty"`
	StartStationId    uint32 `protobuf:"varint,5,opt,name=start_station_id,json=startStationId,proto3" json:"start_station_id,omitempty"`
	StartStation      string `protobuf:"bytes,6,opt,name=start_station,json=startStation,proto3" json:"start_station,omitempty"`
	StartTime         string `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	DestStationId     uint32 `protobuf:"varint,8,opt,name=dest_station_id,json=destStationId,proto3" json:"dest_station_id,omitempty"`
	DestStation       string `protobuf:"bytes,9,opt,name=dest_station,json=destStation,proto3" json:"dest_station,omitempty"`
	DestTime          string `protobuf:"bytes,10,opt,name=dest_time,json=destTime,proto3" json:"dest_time,omitempty"`
	SeatType          string `protobuf:"bytes,11,opt,name=seat_type,json=seatType,proto3" json:"seat_type,omitempty"`
	CarriageNumber    string `protobuf:"bytes,12,opt,name=carriage_number,json=carriageNumber,proto3" json:"carriage_number,omitempty"`
	SeatNumber        string `protobuf:"bytes,13,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
	Price             int32  `protobuf:"varint,14,opt,name=price,proto3" json:"price,omitempty"`
	PassengerName     string `protobuf:"bytes,15,opt,name=passenger_name,json=passengerName,proto3" json:"passenger_name,omitempty"`
	CertificateNumber string `protobuf:"bytes,16,opt,name=certificate_number,json=certificateNumber,proto3" json:"certificate_number,omitempty"`
	PassengerId       uint32 `protobuf:"varint,17,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	OrderOutsideId    string `protobuf:"bytes,18,opt,name=order_outside_id,json=orderOutsideId,proto3" json:"order_outside_id,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ticket) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Ticket) GetTrainId() uint32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *Ticket) GetTrainNum() string {
	if x != nil {
		return x.TrainNum
	}
	return ""
}

func (x *Ticket) GetStartStationId() uint32 {
	if x != nil {
		return x.StartStationId
	}
	return 0
}

func (x *Ticket) GetStartStation() string {
	if x != nil {
		return x.StartStation
	}
	return ""
}

func (x *Ticket) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Ticket) GetDestStationId() uint32 {
	if x != nil {
		return x.DestStationId
	}
	return 0
}

func (x *Ticket) GetDestStation() string {
	if x != nil {
		return x.DestStation
	}
	return ""
}

func (x *Ticket) GetDestTime() string {
	if x != nil {
		return x.DestTime
	}
	return ""
}

func (x *Ticket) GetSeatType() string {
	if x != nil {
		return x.SeatType
	}
	return ""
}

func (x *Ticket) GetCarriageNumber() string {
	if x != nil {
		return x.CarriageNumber
	}
	return ""
}

func (x *Ticket) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *Ticket) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Ticket) GetPassengerName() string {
	if x != nil {
		return x.PassengerName
	}
	return ""
}

func (x *Ticket) GetCertificateNumber() string {
	if x != nil {
		return x.CertificateNumber
	}
	return ""
}

func (x *Ticket) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

func (x *Ticket) GetOrderOutsideId() string {
	if x != nil {
		return x.OrderOutsideId
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{1}
}

type Tickets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *Tickets) Reset() {
	*x = Tickets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tickets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tickets) ProtoMessage() {}

func (x *Tickets) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tickets.ProtoReflect.Descriptor instead.
func (*Tickets) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *Tickets) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type TicketsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Tickets `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TicketsList) Reset() {
	*x = TicketsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketsList) ProtoMessage() {}

func (x *TicketsList) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketsList.ProtoReflect.Descriptor instead.
func (*TicketsList) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *TicketsList) GetList() []*Tickets {
	if x != nil {
		return x.List
	}
	return nil
}

type GetTicketByOrdersIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrdersId []string `protobuf:"bytes,1,rep,name=orders_id,json=ordersId,proto3" json:"orders_id,omitempty"`
}

func (x *GetTicketByOrdersIdRequest) Reset() {
	*x = GetTicketByOrdersIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketByOrdersIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketByOrdersIdRequest) ProtoMessage() {}

func (x *GetTicketByOrdersIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketByOrdersIdRequest.ProtoReflect.Descriptor instead.
func (*GetTicketByOrdersIdRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *GetTicketByOrdersIdRequest) GetOrdersId() []string {
	if x != nil {
		return x.OrdersId
	}
	return nil
}

type GetTicketByPassengerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassengerId uint32 `protobuf:"varint,1,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
}

func (x *GetTicketByPassengerIdRequest) Reset() {
	*x = GetTicketByPassengerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketByPassengerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketByPassengerIdRequest) ProtoMessage() {}

func (x *GetTicketByPassengerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketByPassengerIdRequest.ProtoReflect.Descriptor instead.
func (*GetTicketByPassengerIdRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *GetTicketByPassengerIdRequest) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

type GetUnHandleTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUnHandleTicketsRequest) Reset() {
	*x = GetUnHandleTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnHandleTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnHandleTicketsRequest) ProtoMessage() {}

func (x *GetUnHandleTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnHandleTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetUnHandleTicketsRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *GetUnHandleTicketsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketsId []uint32 `protobuf:"varint,1,rep,packed,name=tickets_id,json=ticketsId,proto3" json:"tickets_id,omitempty"`
	State     uint32   `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"` // 要修改的状态
}

func (x *UpdateStateRequest) Reset() {
	*x = UpdateStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateRequest) ProtoMessage() {}

func (x *UpdateStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateStateRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStateRequest) GetTicketsId() []uint32 {
	if x != nil {
		return x.TicketsId
	}
	return nil
}

func (x *UpdateStateRequest) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type BuyTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId        uint32       `protobuf:"varint,1,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	StartStationId uint32       `protobuf:"varint,2,opt,name=start_station_id,json=startStationId,proto3" json:"start_station_id,omitempty"`
	DestStationId  uint32       `protobuf:"varint,3,opt,name=dest_station_id,json=destStationId,proto3" json:"dest_station_id,omitempty"`
	Date           string       `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Passengers     []*Passenger `protobuf:"bytes,5,rep,name=passengers,proto3" json:"passengers,omitempty"`
	OrderOuterId   string       `protobuf:"bytes,6,opt,name=order_outer_id,json=orderOuterId,proto3" json:"order_outer_id,omitempty"`
	UserId         uint32       `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *BuyTicketsRequest) Reset() {
	*x = BuyTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTicketsRequest) ProtoMessage() {}

func (x *BuyTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTicketsRequest.ProtoReflect.Descriptor instead.
func (*BuyTicketsRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *BuyTicketsRequest) GetTrainId() uint32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *BuyTicketsRequest) GetStartStationId() uint32 {
	if x != nil {
		return x.StartStationId
	}
	return 0
}

func (x *BuyTicketsRequest) GetDestStationId() uint32 {
	if x != nil {
		return x.DestStationId
	}
	return 0
}

func (x *BuyTicketsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BuyTicketsRequest) GetPassengers() []*Passenger {
	if x != nil {
		return x.Passengers
	}
	return nil
}

func (x *BuyTicketsRequest) GetOrderOuterId() string {
	if x != nil {
		return x.OrderOuterId
	}
	return ""
}

func (x *BuyTicketsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassengerId       uint32 `protobuf:"varint,1,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	PassengerName     string `protobuf:"bytes,2,opt,name=passenger_name,json=passengerName,proto3" json:"passenger_name,omitempty"`
	CertificateNumber string `protobuf:"bytes,3,opt,name=certificate_number,json=certificateNumber,proto3" json:"certificate_number,omitempty"`
	SeatTypeId        uint32 `protobuf:"varint,4,opt,name=seat_type_id,json=seatTypeId,proto3" json:"seat_type_id,omitempty"`
}

func (x *Passenger) Reset() {
	*x = Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Passenger) ProtoMessage() {}

func (x *Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Passenger.ProtoReflect.Descriptor instead.
func (*Passenger) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{9}
}

func (x *Passenger) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

func (x *Passenger) GetPassengerName() string {
	if x != nil {
		return x.PassengerName
	}
	return ""
}

func (x *Passenger) GetCertificateNumber() string {
	if x != nil {
		return x.CertificateNumber
	}
	return ""
}

func (x *Passenger) GetSeatTypeId() uint32 {
	if x != nil {
		return x.SeatTypeId
	}
	return 0
}

type BuyTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassengerId uint32 `protobuf:"varint,1,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	TicketId    uint32 `protobuf:"varint,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *BuyTicketsResponse) Reset() {
	*x = BuyTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTicketsResponse) ProtoMessage() {}

func (x *BuyTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTicketsResponse.ProtoReflect.Descriptor instead.
func (*BuyTicketsResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{10}
}

func (x *BuyTicketsResponse) GetPassengerId() uint32 {
	if x != nil {
		return x.PassengerId
	}
	return 0
}

func (x *BuyTicketsResponse) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type BuyTicketsResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*BuyTicketsResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *BuyTicketsResponseList) Reset() {
	*x = BuyTicketsResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyTicketsResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTicketsResponseList) ProtoMessage() {}

func (x *BuyTicketsResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTicketsResponseList.ProtoReflect.Descriptor instead.
func (*BuyTicketsResponseList) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{11}
}

func (x *BuyTicketsResponseList) GetResponse() []*BuyTicketsResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_ticket_proto protoreflect.FileDescriptor

var file_ticket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x22, 0xdf, 0x04, 0x0a, 0x06, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x36, 0x0a, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x0b,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xa6, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x12, 0x42, 0x75, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x53,
	0x0a, 0x16, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xad, 0x03, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x50, 0x43, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x24, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x75, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x75, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_proto_rawDescOnce sync.Once
	file_ticket_proto_rawDescData = file_ticket_proto_rawDesc
)

func file_ticket_proto_rawDescGZIP() []byte {
	file_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_proto_rawDescData)
	})
	return file_ticket_proto_rawDescData
}

var file_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ticket_proto_goTypes = []interface{}{
	(*Ticket)(nil),                        // 0: ticketRPC.Ticket
	(*Empty)(nil),                         // 1: ticketRPC.Empty
	(*Tickets)(nil),                       // 2: ticketRPC.Tickets
	(*TicketsList)(nil),                   // 3: ticketRPC.TicketsList
	(*GetTicketByOrdersIdRequest)(nil),    // 4: ticketRPC.GetTicketByOrdersIdRequest
	(*GetTicketByPassengerIdRequest)(nil), // 5: ticketRPC.GetTicketByPassengerIdRequest
	(*GetUnHandleTicketsRequest)(nil),     // 6: ticketRPC.GetUnHandleTicketsRequest
	(*UpdateStateRequest)(nil),            // 7: ticketRPC.UpdateStateRequest
	(*BuyTicketsRequest)(nil),             // 8: ticketRPC.BuyTicketsRequest
	(*Passenger)(nil),                     // 9: ticketRPC.Passenger
	(*BuyTicketsResponse)(nil),            // 10: ticketRPC.BuyTicketsResponse
	(*BuyTicketsResponseList)(nil),        // 11: ticketRPC.BuyTicketsResponseList
}
var file_ticket_proto_depIdxs = []int32{
	0,  // 0: ticketRPC.Tickets.tickets:type_name -> ticketRPC.Ticket
	2,  // 1: ticketRPC.TicketsList.list:type_name -> ticketRPC.Tickets
	9,  // 2: ticketRPC.BuyTicketsRequest.passengers:type_name -> ticketRPC.Passenger
	10, // 3: ticketRPC.BuyTicketsResponseList.response:type_name -> ticketRPC.BuyTicketsResponse
	4,  // 4: ticketRPC.TicketService.GetTicketByOrdersId:input_type -> ticketRPC.GetTicketByOrdersIdRequest
	5,  // 5: ticketRPC.TicketService.GetTicketByPassengerId:input_type -> ticketRPC.GetTicketByPassengerIdRequest
	6,  // 6: ticketRPC.TicketService.GetUnHandleTickets:input_type -> ticketRPC.GetUnHandleTicketsRequest
	7,  // 7: ticketRPC.TicketService.UpdateTicketsState:input_type -> ticketRPC.UpdateStateRequest
	8,  // 8: ticketRPC.TicketService.BuyTickets:input_type -> ticketRPC.BuyTicketsRequest
	3,  // 9: ticketRPC.TicketService.GetTicketByOrdersId:output_type -> ticketRPC.TicketsList
	2,  // 10: ticketRPC.TicketService.GetTicketByPassengerId:output_type -> ticketRPC.Tickets
	2,  // 11: ticketRPC.TicketService.GetUnHandleTickets:output_type -> ticketRPC.Tickets
	1,  // 12: ticketRPC.TicketService.UpdateTicketsState:output_type -> ticketRPC.Empty
	11, // 13: ticketRPC.TicketService.BuyTickets:output_type -> ticketRPC.BuyTicketsResponseList
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_ticket_proto_init() }
func file_ticket_proto_init() {
	if File_ticket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tickets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketByOrdersIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketByPassengerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnHandleTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyTicketsResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_proto_depIdxs,
		MessageInfos:      file_ticket_proto_msgTypes,
	}.Build()
	File_ticket_proto = out.File
	file_ticket_proto_rawDesc = nil
	file_ticket_proto_goTypes = nil
	file_ticket_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TicketServiceClient is the client API for TicketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketServiceClient interface {
	GetTicketByOrdersId(ctx context.Context, in *GetTicketByOrdersIdRequest, opts ...grpc.CallOption) (*TicketsList, error)
	GetTicketByPassengerId(ctx context.Context, in *GetTicketByPassengerIdRequest, opts ...grpc.CallOption) (*Tickets, error)
	GetUnHandleTickets(ctx context.Context, in *GetUnHandleTicketsRequest, opts ...grpc.CallOption) (*Tickets, error)
	UpdateTicketsState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*Empty, error)
	BuyTickets(ctx context.Context, in *BuyTicketsRequest, opts ...grpc.CallOption) (*BuyTicketsResponseList, error)
}

type ticketServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketServiceClient(cc grpc.ClientConnInterface) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) GetTicketByOrdersId(ctx context.Context, in *GetTicketByOrdersIdRequest, opts ...grpc.CallOption) (*TicketsList, error) {
	out := new(TicketsList)
	err := c.cc.Invoke(ctx, "/ticketRPC.TicketService/GetTicketByOrdersId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) GetTicketByPassengerId(ctx context.Context, in *GetTicketByPassengerIdRequest, opts ...grpc.CallOption) (*Tickets, error) {
	out := new(Tickets)
	err := c.cc.Invoke(ctx, "/ticketRPC.TicketService/GetTicketByPassengerId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) GetUnHandleTickets(ctx context.Context, in *GetUnHandleTicketsRequest, opts ...grpc.CallOption) (*Tickets, error) {
	out := new(Tickets)
	err := c.cc.Invoke(ctx, "/ticketRPC.TicketService/GetUnHandleTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) UpdateTicketsState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ticketRPC.TicketService/UpdateTicketsState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) BuyTickets(ctx context.Context, in *BuyTicketsRequest, opts ...grpc.CallOption) (*BuyTicketsResponseList, error) {
	out := new(BuyTicketsResponseList)
	err := c.cc.Invoke(ctx, "/ticketRPC.TicketService/BuyTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketServiceServer is the server API for TicketService service.
type TicketServiceServer interface {
	GetTicketByOrdersId(context.Context, *GetTicketByOrdersIdRequest) (*TicketsList, error)
	GetTicketByPassengerId(context.Context, *GetTicketByPassengerIdRequest) (*Tickets, error)
	GetUnHandleTickets(context.Context, *GetUnHandleTicketsRequest) (*Tickets, error)
	UpdateTicketsState(context.Context, *UpdateStateRequest) (*Empty, error)
	BuyTickets(context.Context, *BuyTicketsRequest) (*BuyTicketsResponseList, error)
}

// UnimplementedTicketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketServiceServer struct {
}

func (*UnimplementedTicketServiceServer) GetTicketByOrdersId(context.Context, *GetTicketByOrdersIdRequest) (*TicketsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicketByOrdersId not implemented")
}
func (*UnimplementedTicketServiceServer) GetTicketByPassengerId(context.Context, *GetTicketByPassengerIdRequest) (*Tickets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicketByPassengerId not implemented")
}
func (*UnimplementedTicketServiceServer) GetUnHandleTickets(context.Context, *GetUnHandleTicketsRequest) (*Tickets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnHandleTickets not implemented")
}
func (*UnimplementedTicketServiceServer) UpdateTicketsState(context.Context, *UpdateStateRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTicketsState not implemented")
}
func (*UnimplementedTicketServiceServer) BuyTickets(context.Context, *BuyTicketsRequest) (*BuyTicketsResponseList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyTickets not implemented")
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_GetTicketByOrdersId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketByOrdersIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).GetTicketByOrdersId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketRPC.TicketService/GetTicketByOrdersId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).GetTicketByOrdersId(ctx, req.(*GetTicketByOrdersIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_GetTicketByPassengerId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketByPassengerIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).GetTicketByPassengerId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketRPC.TicketService/GetTicketByPassengerId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).GetTicketByPassengerId(ctx, req.(*GetTicketByPassengerIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_GetUnHandleTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUnHandleTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).GetUnHandleTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketRPC.TicketService/GetUnHandleTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).GetUnHandleTickets(ctx, req.(*GetUnHandleTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_UpdateTicketsState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).UpdateTicketsState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketRPC.TicketService/UpdateTicketsState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).UpdateTicketsState(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_BuyTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).BuyTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketRPC.TicketService/BuyTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).BuyTickets(ctx, req.(*BuyTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ticketRPC.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTicketByOrdersId",
			Handler:    _TicketService_GetTicketByOrdersId_Handler,
		},
		{
			MethodName: "GetTicketByPassengerId",
			Handler:    _TicketService_GetTicketByPassengerId_Handler,
		},
		{
			MethodName: "GetUnHandleTickets",
			Handler:    _TicketService_GetUnHandleTickets_Handler,
		},
		{
			MethodName: "UpdateTicketsState",
			Handler:    _TicketService_UpdateTicketsState_Handler,
		},
		{
			MethodName: "BuyTickets",
			Handler:    _TicketService_BuyTickets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ticket.proto",
}
